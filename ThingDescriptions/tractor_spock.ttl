@prefix td: <https://www.w3.org/2019/wot/td#> .
@prefix htv: <http://www.w3.org/2011/http#> .
@prefix hctl: <https://www.w3.org/2019/wot/hypermedia#> .
@prefix wotsec: <https://www.w3.org/2019/wot/security#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix js: <https://www.w3.org/2019/wot/json-schema#> .
@prefix smrtfrm: <http://semantics.interactions.ics.unisg.ch/smartfarming#> .
@prefix om: <http://www.ontology-of-units-of-measure.org/resource/om-2/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<urn:tractorbot_spock> a td:Thing, smrtfrm:Robot;
  dct:title "Smart tractor";
  td:hasSecurityConfiguration [ a wotsec:NoSecurityScheme];
  td:hasBase <http://10.10.10.103/>;
  td:hasPropertyAffordance [ a td:PropertyAffordance, smrtfrm:Implement, js:StringSchema;
      td:name "hasImplement";
      dct:description "Which implement is attached to the tractor";
      td:hasForm [
          hctl:hasTarget <http://10.10.10.103:8080/things/tractorbot/properties/hasImplement>;
          hctl:forContentType "application/json";
          hctl:hasOperationType td:readProperty
        ];
      td:isObservable false
    ], [ a td:PropertyAffordance, smrtfrm:SoilConditionValue, js:ArraySchema;
      td:name "soilCondition";
      dct:description "Raw data from soil sensor";
      td:hasForm [
          hctl:hasTarget <http://10.10.10.103:8080/things/tractorbot/properties/soilcondition>;
          hctl:forContentType "application/json";
          hctl:hasOperationType td:readProperty
        ];
      td:isObservable false
    ], [ a td:PropertyAffordance, smrtfrm:BatteryVoltage, js:ArraySchema;
      td:name "batteryLevel";
      td:unit om:volts;
      dct:description "Main batterypack voltage";
      td:hasForm [
          hctl:hasTarget <http://10.10.10.103:8080/things/tractorbot/properties/batteryvoltage>;
          hctl:forContentType "application/json";
          hctl:hasOperationType td:readProperty
        ];
      td:isObservable false
    ], [ a td:PropertyAffordance, smrtfrm:RadarData, js:StringSchema;
      td:name "lidar";
      dct:description "Raw data from LiDAR sensor";
      td:hasForm [
          hctl:hasTarget <http://10.10.10.103:8080/things/tractorbot/properties/lidar>;
          hctl:forContentType "application/json";
          hctl:hasOperationType td:readProperty
        ];
      td:isObservable false
    ], [ a td:PropertyAffordance, smrtfrm:HighTemperatureEvent, js:NumberSchema;
      td:name "highTemperature";
      td:unit om:degree_Celsius;
      dct:description "Engine temperature high";
      td:hasForm [
          htv:methodName "GET";
          hctl:hasTarget <http://10.10.10.103:8080/things/tractorbot/events/highTemperature>;
          hctl:forContentType "application/json";
          hctl:hasOperationType td:readProperty
        ];
      td:isObservable true
    ], [ a td:PropertyAffordance, smrtfrm:LowBattteryEvent, js:NumberSchema;
      td:name "lowBattery";
      td:unit om:volts;
      dct:description "Battery level low";
      td:hasForm [
          htv:methodName "GET";
          hctl:hasTarget <http://10.10.10.103:8080/things/tractorbot/events/lowBattery>;
          hctl:forContentType "application/json";
          hctl:hasOperationType td:readProperty
        ];
      td:isObservable true
   ];
  td:hasActionAffordance [ a td:ActionAffordance, smrtfrm:MecannumWheelAction;
      dct:title "Wheels";
      td:name "wheel control";
      dct:description "Control the mecannum wheels";
      td:hasForm [
          htv:methodName "POST";
          hctl:hasTarget <http://10.10.10.103:8080/things/tractorbot/actions/wheelControl>;
          hctl:forContentType "application/json";
          hctl:hasOperationType td:invokeAction
        ];
      td:hasInputSchema [ a js:ObjectSchema;
          js:properties [ a js:IntegerSchema;
              js:propertyName "duration";
              js:minimum "0"^^xsd:int;
              js:maximum "20000"^^xsd:int;
              td:unit "x y z-rot"
            ], [ a js:IntegerSchema;
              js:propertyName "axis";
              js:minimum "0"^^xsd:int;
              js:maximum "2"^^xsd:int;
              td:unit "cm-per-sec"
            ], [ a js:IntegerSchema;
              js:propertyName "speed";
              js:minimum "-7"^^xsd:int;
              js:maximum "7"^^xsd:int
            ]
         ]
      ], [ a td:ActionAffordance, smrtfrm:WaypointAction;
      dct:title "Waypoints";
      td:name "set waypoint";
      dct:description "Set the next waypoint for the robot";
      td:hasForm [
          htv:methodName "POST";
          hctl:hasTarget <http://10.10.10.107:3000/move>;
          hctl:forContentType "application/json";
          hctl:hasOperationType td:invokeAction
        ];
      td:hasInputSchema [ a js:ObjectSchema;
          js:properties [ a js:IntegerSchema, smrtfrm:RelativeXDirection;
              js:propertyName "dx";
              js:minimum "0"^^xsd:int;
              js:maximum "1000"^^xsd:int;
              td:unit "s"
            ], [ a js:IntegerSchema, smrtfrm:RelativeYDirection;
              js:propertyName "dy";
              js:minimum "0"^^xsd:int;
              js:maximum "1000"^^xsd:int;
              td:unit "s"
            ]
         ]
		], [ a td:ActionAffordance, smrtfrm:IrrigateAction;
      dct:title "Irrigate";
      td:name "irrigate";
      dct:description "Ask the tractor to autonomously irrigate a section";
      td:hasForm [
          htv:methodName "POST";
          hctl:hasTarget <http://10.10.10.107:3000/irrigate>;
          hctl:forContentType "application/json";
          hctl:hasOperationType td:invokeAction
        ];
      td:hasInputSchema [ a js:ObjectSchema;
          js:properties [ a js:IntegerSchema, smrtfrm:SectionId;
              js:propertyName "dx";
              js:minimum "0"^^xsd:int;
              js:maximum "1000"^^xsd:int;
              td:unit "s"
            ], [ a js:IntegerSchema, smrtfrm:Volume;
              js:propertyName "dy";
              js:minimum "0"^^xsd:int;
              js:maximum "1000"^^xsd:int;
              td:unit "s"
            ]
         ]
		].
